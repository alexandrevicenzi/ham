#! /bin/sh

if [ -z "$sh_gerrit_local_upstream" ]; then
  sh_gerrit_local_upstream=$( \
    git config --bool --get-regexp '^remote\.[^.]*\.ham$' true \
    | while read o b; do \
      if [ -n "$rem" ]; then \
        echo "Multiple ham-enabled remotes found. Which one to take? (Use -u)" >&2; \
        exit 1; \
      fi; \
      rem=$(echo $o | while IFS=. read r rem ham; do echo $rem; done); \
      echo $rem/$(git config --get "ham.$rem.revision"); \
    done)
  [ $? == 0 ] || exit 1
  if [ -z "$sh_gerrit_local_upstream" ]; then
    sh_gerrit_local_upstream=$(git rev-parse --abbrev-ref --symbolic-full-name @{u})
  fi
fi

sh_gerrit_origin_name=${sh_gerrit_local_upstream%%/*}
sh_gerrit_branch_remote=${sh_gerrit_local_upstream#$sh_gerrit_origin_name/}

sh_gerrit_tmp=$(git remote -v | grep -E "^$sh_gerrit_origin_name\s+ssh://.*\(push\)" )
if [ -z "$sh_gerrit_tmp" ]; then
  echo "Cannot figure out gerrit-server, no ssh-based remote found."
  exit 1
fi

sh_gerrit_repo_url=${sh_gerrit_tmp#${sh_gerrit_origin_name}	}
sh_gerrit_repo_url=${sh_gerrit_repo_url% (push)}
sh_gerrit_tmp=${sh_gerrit_repo_url#*ssh://}
sh_gerrit_ssh_host=${sh_gerrit_tmp%%/*}

unset sh_gerrit_tmp

if [ -n "" ]; then
  echo sh_gerrit_local_upstream=$sh_gerrit_local_upstream
  echo sh_gerrit_origin_name=$sh_gerrit_origin_name
  echo sh_gerrit_branch_remote=$sh_gerrit_branch_remote
  echo sh_gerrit_repo_url=$sh_gerrit_repo_url
  echo sh_gerrit_ssh_host=$sh_gerrit_ssh_host
fi
